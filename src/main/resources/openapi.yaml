openapi: 3.0.3
info:
  title: Business Microservice Profile V1
  description: |-
    Este microservicio tendrá a los clientes y a los usuarios colaboradores de la empresa Coroda Automatic Door SAC.
    
    Algunos enlaces útiles:
    - [El repositorio de mc_profile](https://github.com/garychavez/mc_openapi)
    - [La definición de API mc_profile](https://github.com/garychavez/mc_openapi)

  contact:
    email: garychavezj@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1

servers:
  - url: https://mcprofile/api/v1
tags:
  - name: profile
    description: API encargada de la gestion de los Perfiles
    externalDocs:
      description: Saber más
      url: https://github.com/garychavez/mc_openapi/blob/main/README.md

paths:
  /person:
    post:
      tags:
        - profile
      summary: Metodo a traves del cual se envia la informacion del Perfil que sera registrada dentro de la base de datos.
      description: Para el registro del Perfil , sera necesario el llenado de todo los campos , a excepcion de los Id´s los cuales seran generados automaticamente.
      operationId: addPersonProfile
      requestBody:
        description: Crear un nuevo perfil
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '404':
          description: Not Found
        '500':
          description: error connecting to server
    get:
      tags:
        - profile
      summary: Metodo a traves del cual se obtiene la informacion del Perfil.
      description: Para la obtención del Perfil , sera necesario mandar ciertos parametros.
      operationId: getDataPersonProfile
      parameters:
        - name: params
          in: query
          description: Parametros de busqueda
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '404':
          description: Not Found
        '500':
          description: error connecting to server
    put:
      tags:
        - profile
      summary: Metodo a traves del cual se actualiza la informacion del Perfil mediante su Id.
      description: Para Actualizar los datos de un Perfil , sera necesario enviar todo el registro con los datos ya actualizados junto a su Id.
      operationId: putPersonProfileById
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '404':
          description: Not Found
        '500':
          description: error connecting to server
  /person/{numberDocument}:
    get:
      tags:
        - profile
      summary: Metodo a traves del cual se obtiene la informacion del Perfil mediante su número de documento.
      description: Para la obtencion de datos de un Perfil , sera necesario enviar el número de documento del perfil a consultar.
      operationId: getPersonProfileByNumberDocument
      parameters:
        - name: numberDocument
          in: path
          description: Número de Documento del Perfil
          required: true
          schema:
            type: number
            example: 71111111
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '404':
          description: Not Found
        '500':
          description: error connecting to server
  /person/email/{email}:
    get:
      tags:
        - profile
      summary: Metodo a traves del cual se obtiene la informacion del Perfil mediante su email.
      description: Para la obtencion de datos de un Perfil , sera necesario enviar el email del perfil a consultar.
      operationId: getPersonProfileByEmail
      parameters:
        - name: email
          in: path
          description: Email del Perfil
          required: true
          schema:
            type: string
            example: garychavezj@gmail.com
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '404':
          description: Not Found
        '500':
          description: error connecting to server
  /person/id/{idPerson}:
    get:
      tags:
        - profile
      summary: Metodo a traves del cual se obtiene la informacion del Perfil mediante su email.
      description: Para la obtencion de datos de un Perfil , sera necesario enviar el email del perfil a consultar.
      operationId: getPersonProfileById
      parameters:
        - name: idPerson
          in: path
          description: Identificador del Perfil
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '404':
          description: Not Found
        '500':
          description: error connecting to server
    delete:
      tags:
        - profile
      summary: Metodo a traves del cual se elimina la informacion del Perfil mediante su email.
      description: Para eliminar los datos de un Perfil , sera necesario enviar el email del perfil a consultar.
      operationId: deletePersonProfileById
      parameters:
        - name: idPerson
          in: path
          description: Identificador del Perfil
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: Successful operation
        '404':
          description: Not Found
        '500':
          description: error connecting to server
  /person/listdni:
    get:
      tags:
        - profile
      summary: Metodo a traves del cual se obtiene la informacion de una lista de Perfil.
      description: Para la obtención de la lista de Perfiles , sera necesario mandar la lista de DNIs a consultar.
      operationId: getListPersonProfile
      parameters:
        - in: query
          name: requestList
          description: requestList
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BodyPersonRequest'

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '404':
          description: Not Found
        '500':
          description: error connecting to server

components:
  schemas:
    PersonRequest:
      required:
        - name
        - firstLastName
        - secondLastName
        - typePerson
        - typeDocument
        - numberDocument
      type: object
      properties:
        id:
          type: integer
          description: identificador de la persona
          format: int64
          example: 1
        typePerson:
          type: string
          description: Tipo de persona
          example: Natural
          enum:
            - Natural
            - Juridica
        typeDocument:
          type: string
          description: Tipo de documento
          example: DNI
          enum:
            - DNI
            - RUC
            - Carnet_Extranjeria
        numberDocument:
          type: number
          description: Número de documento
          example: 71111111
        name:
          type: string
          description: Nombre de la Persona
          example: Alberto
        firstLastName:
          type: string
          description: Primer apellido
          example: Chavez
        secondLastName:
          type: string
          description: Segundo apellido
          example: Jimenez
        socialReason:
          type: string
          description: Razón social
          example: AlbCHJ
        email:
          type: string
          example: garychavezj@email.com
        phone:
          type: number
          description: Número de teléfono
          example: 987654321
        address:
          description: Dirección
          $ref: '#/components/schemas/Address'
    BodyPersonRequest:
      required:
        - numberDocument
      properties:
        typeDocument:
          type: string
          description: typeDocument
          enum:
            - DNI
            - RUC
            - Carnet_Extranjeria
        numberDocument:
          type: integer
          format: int64
          description: numberDocument
        name:
          type: string
          description: name
    PersonResponse:
      type: object
      properties:
        id:
          type: integer
          description: identificador de la persona
          format: int64
          example: 1
        typePerson:
          type: string
          description: Tipo de persona
          example: Natural
          enum:
            - Natural
            - Juridica
        typeDocument:
          type: string
          description: Tipo de documento
          example: DNI
          enum:
            - DNI
            - RUC
            - Carnet_Extranjeria
        numberDocument:
          type: number
          description: Número de documento
          example: 71111111
        name:
          type: string
          description: Nombre de la Persona
          example: Alberto
        firstLastName:
          type: string
          description: Primer apellido
          example: Chavez
        secondLastName:
          type: string
          description: Segundo apellido
          example: Jimenez
        socialReason:
          type: string
          description: Razón social
          example: AlbCHJ
        email:
          type: string
          example: garychavezj@email.com
        phone:
          type: number
          description: Número de teléfono
          example: 987654321
        address:
          description: Dirección
          $ref: '#/components/schemas/Address'
    Address:
      type: object
      properties:
        street:
          type: string
          example: Av. Gasoducto
        city:
          type: string
          example: Lima
        country:
          type: string
          example: Perú
